class Solution {
public:
    int level(TreeNode* root){
        if(root==NULL) return 0;
        int leftlevel = level(root->left);
        int rightlevel = level(root->right);
        return 1+max(leftlevel,rightlevel);
    }
    void display(TreeNode* root,int currentlevel,int level,vector<int>& ans){
        if(root==NULL) return; //base case
        if(currentlevel==level){
            ans[currentlevel] = root->val;
            return;    
        } // print root     
        display(root->left,currentlevel+1,level,ans);    
        display(root->right,currentlevel+1,level,ans);// call1 left
    }
    void orderlevel(TreeNode* root,vector<int>& ans){
        int n = ans.size();
        for(int i = 0 ;i<n;i++){
            display(root,0,i,ans);
        }
    }
    vector<int> rightSideView(TreeNode* root) {
        vector<int> ans(level(root),0);
        orderlevel(root,ans);
        return ans;
    }
};
