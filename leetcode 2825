class Solution {
public:
    bool canMakeSubsequence(string str1, string str2) {
        int m = str1.size(), n = str2.size();
        int j = 0; // Pointer for str2
        
        // Traverse str1 to check if we can match str2 as a subsequence
        for (int i = 0; i < m && j < n; ++i) {
            // Check if current character in str1 can match the current character in str2
            // Either directly or by incrementing str1[i] cyclically
            if (str1[i] == str2[j] || ((str1[i] - 'a' + 1) % 26 + 'a') == str2[j]) {
                ++j; // Move to the next character in str2
            }
        }
        
        // If we've matched all characters of str2, return true
        return j == n;
    }
};
