class Solution {
public:
    int diameterOfBinaryTree(TreeNode* root) {
        int diameter = 0;
        depth(root,diameter);
        return diameter;
    }
private:
    int depth(TreeNode* node, int& diameter) {
        if (node == nullptr) return 0;
        int leftDepth = depth(node->left, diameter);
        int rightDepth = depth(node->right, diameter);
        diameter = std::max(diameter, leftDepth + rightDepth);
        return 1 + std::max(leftDepth, rightDepth);
    }
};
